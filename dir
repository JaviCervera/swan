// note: on visual studio, if you include this file dirent.h must be present

#ifndef SWAN_DIR_H
#define SWAN_DIR_H

#include <string>
#include <vector>

#ifndef _MSC_VER
#include <dirent.h>
#include <unistd.h>
#include <sys/stat.h>
#define _getcwd getcwd
#define _chdir chdir
#define _mkdir mkdir
#define _rmdir rmdir
#else
#include <direct.h>
#include "dirent.h"
//#undef CopyFile
//#undef DeleteFile
#endif

namespace swan
{
  namespace dir
  {
    inline std::vector<std::string> contents(const char* path)
    {
      std::vector<std::string> arr;

      // open directory
      DIR* d = (DIR*)opendir(path);
      if ( d == NULL ) return arr;

      // copy directory contents
      struct dirent* entry;
      while ( (entry = (struct dirent*)readdir(d)) )
      {
        arr.push_back(entry->d_name);
      }

      // close directory
      closedir(d);

      return arr;
    }

    inline std::string current()
    {
      char buf[FILENAME_MAX];
      _getcwd(buf, FILENAME_MAX);
      return std::string(buf);
    }

    inline bool change(const char* path)
    {
      return _chdir(path) == 0;
    }

    inline void create(const char* path)
    {
#ifdef _WIN32
      _mkdir(path);
#else
      _mkdir(path, S_IRWXU | S_IRGRP | S_IXGRP);
#endif
    }

    inline void remove(const char* path)
    {
      _rmdir(path);
    }
  } // namespace dir
} // namespace swan

#endif // SWAN_DIR_H

